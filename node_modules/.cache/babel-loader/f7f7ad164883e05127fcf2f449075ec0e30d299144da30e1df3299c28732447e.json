{"ast":null,"code":"var _jsxFileName = \"/Users/erickcabrera/Desktop/Bytes_HNS/src/components/SignIn/index.js\";\nimport React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport Buttons from \"./../forms/Button\";\nimport { signInWithGoogle, auth } from \"./../../firebase/utils\";\n\n// Email and password\nimport FormInput from \"./../forms/FormInput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: \"\",\n  password: \"\"\n};\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          ...initialState\n        });\n      } catch (err) {\n        //console.log(err);\n      }\n    };\n    this.state = {\n      ...initialState\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  }\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signin\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LogIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forWrap\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              placeholder: \"Email\",\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n              type: \"password\",\n              name: \"password\",\n              value: password,\n              placeholder: \"password\",\n              handleChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n              type: \"submit\",\n              children: \"LogIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"socialSignin\",\n              children: /*#__PURE__*/_jsxDEV(Buttons, {\n                onClick: signInWithGoogle,\n                children: \"Sign in with Google\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SignIn;","map":{"version":3,"names":["React","Component","Buttons","signInWithGoogle","auth","FormInput","initialState","email","password","SignIn","constructor","props","handleSubmit","e","preventDefault","state","signInWithEmailAndPassword","setState","err","handleChange","bind","name","value","target","render"],"sources":["/Users/erickcabrera/Desktop/Bytes_HNS/src/components/SignIn/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.scss\";\nimport Buttons from \"./../forms/Button\";\nimport { signInWithGoogle, auth } from \"./../../firebase/utils\";\n\n// Email and password\nimport FormInput from \"./../forms/FormInput\";\n\nconst initialState = {\n  email: \"\",\n  password: \"\",\n};\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...initialState,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({\n        ...initialState,\n      });\n    } catch (err) {\n      //console.log(err);\n    }\n  };\n\n  render() {\n    const { email, password } = this.state;\n    return (\n      <div className=\"signin\">\n        <div className=\"wrap\">\n          <h2>LogIn</h2>\n\n          <div className=\"forWrap\">\n            <form onSubmit={this.handleSubmit}>\n              <FormInput\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                placeholder=\"Email\"\n                handleChange={this.handleChange}\n              />\n\n              <FormInput\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                placeholder=\"password\"\n                handleChange={this.handleChange}\n              />\n\n              <Buttons type=\"submit\">LogIn</Buttons>\n\n              <div className=\"socialSignin\">\n                <Buttons onClick={signInWithGoogle}>\n                  Sign in with Google\n                </Buttons>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,gBAAgB,EAAEC,IAAI,QAAQ,wBAAwB;;AAE/D;AACA,OAAOC,SAAS,MAAM,sBAAsB;AAAC;AAE7C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,MAAM,SAASR,SAAS,CAAC;EAC7BS,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAcfC,YAAY,GAAG,MAAOC,CAAC,IAAK;MAC1BA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAM;QAAEP,KAAK;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACO,KAAK;MAEtC,IAAI;QACF,MAAMX,IAAI,CAACY,0BAA0B,CAACT,KAAK,EAAEC,QAAQ,CAAC;QACtD,IAAI,CAACS,QAAQ,CAAC;UACZ,GAAGX;QACL,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOY,GAAG,EAAE;QACZ;MAAA;IAEJ,CAAC;IAzBC,IAAI,CAACH,KAAK,GAAG;MACX,GAAGT;IACL,CAAC;IACD,IAAI,CAACa,YAAY,GAAG,IAAI,CAACA,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;EAClD;EAEAD,YAAY,CAACN,CAAC,EAAE;IACd,MAAM;MAAEQ,IAAI;MAAEC;IAAM,CAAC,GAAGT,CAAC,CAACU,MAAM;IAChC,IAAI,CAACN,QAAQ,CAAC;MACZ,CAACI,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ;EAgBAE,MAAM,GAAG;IACP,MAAM;MAAEjB,KAAK;MAAEC;IAAS,CAAC,GAAG,IAAI,CAACO,KAAK;IACtC,oBACE;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAK,SAAS,EAAC,MAAM;QAAA,wBACnB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc,eAEd;UAAK,SAAS,EAAC,SAAS;UAAA,uBACtB;YAAM,QAAQ,EAAE,IAAI,CAACH,YAAa;YAAA,wBAChC,QAAC,SAAS;cACR,IAAI,EAAC,OAAO;cACZ,IAAI,EAAC,OAAO;cACZ,KAAK,EAAEL,KAAM;cACb,WAAW,EAAC,OAAO;cACnB,YAAY,EAAE,IAAI,CAACY;YAAa;cAAA;cAAA;cAAA;YAAA,QAChC,eAEF,QAAC,SAAS;cACR,IAAI,EAAC,UAAU;cACf,IAAI,EAAC,UAAU;cACf,KAAK,EAAEX,QAAS;cAChB,WAAW,EAAC,UAAU;cACtB,YAAY,EAAE,IAAI,CAACW;YAAa;cAAA;cAAA;cAAA;YAAA,QAChC,eAEF,QAAC,OAAO;cAAC,IAAI,EAAC,QAAQ;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAgB,eAEtC;cAAK,SAAS,EAAC,cAAc;cAAA,uBAC3B,QAAC,OAAO;gBAAC,OAAO,EAAEhB,gBAAiB;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAEzB;cAAA;cAAA;cAAA;YAAA,QACN;UAAA;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA,QACH;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,eAAeM,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}